{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shubh\\\\Downloads\\\\chitChat-main\\\\chitChat-main\\\\src\\\\components\\\\ChatFeed.jsx\";\nimport React from \"react\";\nimport MessageForm from \"./MessageForm\";\nimport MyMessage from \"./MyMessage\";\nimport TheirMessage from \"./TheirMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChatFeed(props) {\n  console.log(props);\n  const {\n    chats,\n    activeChat,\n    userName,\n    messages\n  } = props;\n  const chat = chats && chats[activeChat];\n\n  function renderReadReceipts(message, isMyMessage) {\n    chat.people.map((person, index) => person.last_read === message.id && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"read-receipt\",\n      style: {\n        float: isMyMessage ? \"right\" : \"left\",\n        backgroundImage: \"url(${person?.person?.avatar})\"\n      }\n    }, \"read_${index}\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this));\n  }\n\n  function renderMessages() {\n    const keys = Object.keys(messages);\n    return keys.map((key, index) => {\n      const message = messages[key];\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\n      const isMyMessage = userName === message.sender.username;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-block\",\n          children: isMyMessage ? /*#__PURE__*/_jsxDEV(MyMessage, {\n            message: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(TheirMessage, {\n            message: message,\n            lastMessage: messages[lastMessageKey]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"read-receipts\",\n          style: {\n            marginRight: isMyMessage ? \"18px\" : \"0px\",\n            marginLeft: isMyMessage ? \"0px\" : \"68px\"\n          },\n          children: renderReadReceipts(message, isMyMessage)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, `msg_${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  if (!chat) return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-feed\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-title-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-title\",\n        children: chat === null || chat === void 0 ? void 0 : chat.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-subtitle\",\n        children: chat.people.map(person => ` ${person.person.username}`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), renderMessages(), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-form-container\",\n      children: /*#__PURE__*/_jsxDEV(MessageForm, { ...props,\n        chatId: activeChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n} //   function renderMessages() {\n//     const keys = Object.keys(messages);\n//     return keys.map((keys, index) => {\n//       const message = message[key];\n//       const lastMessageKey = index === 0 ? null : keys[index - 1];\n//       const isMyMessage = userName === message.sender.user0name;\n//       return (\n//         <div key={\"msg_${index}\"} style={{ width: \"100%\" }}>\n//           <div className=\"message-block\">\n//             {isMyMessage ? (\n//               <MyMessage message={message} />\n//             ) : (\n//               <TheirMessage\n//                 message={message}\n//                 lastMessage={messages[lastMessageKey]}\n//               />\n//             )}\n//           </div>\n//           <div\n//             className=\"read-receipts\"\n//             style={{\n//               marginRight: isMyMessage ? \"18px\" : \"0px\",\n//               marginLeft: isMyMessage ? \"0px\" : \"68px\"\n//             }}\n//           ></div>\n//           read receipts\n//         </div>\n//       );\n//     });\n//   }\n//   renderMessages();\n//   if (!chat) return \"Loading ...\";\n//   return (\n//     <div className=\"chat-feed\">\n//       <div className=\"chat-title-container\">\n//         <div className=\"chat-title\">{chat?.title}</div>\n//         <div className=\"chat-subtitle\">\n//           {chat.people.map((person) => \"${person.person.username}\")}\n//         </div>\n//       </div>\n//       {renderMessages()}\n//       <div style={{ height: \"100px\" }} />\n//       <div className=\"message-form-container\" />\n//       <MessageForm {...props} chatId={activeChat} />\n//     </div>\n//   );\n// }\n\n\n_c = ChatFeed;\nexport default ChatFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatFeed\");","map":{"version":3,"sources":["C:/Users/Shubh/Downloads/chitChat-main/chitChat-main/src/components/ChatFeed.jsx"],"names":["React","MessageForm","MyMessage","TheirMessage","ChatFeed","props","console","log","chats","activeChat","userName","messages","chat","renderReadReceipts","message","isMyMessage","people","map","person","index","last_read","id","float","backgroundImage","renderMessages","keys","Object","key","lastMessageKey","sender","username","width","marginRight","marginLeft","title","height"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport MessageForm from \"./MessageForm\";\nimport MyMessage from \"./MyMessage\";\nimport TheirMessage from \"./TheirMessage\";\n\nfunction ChatFeed(props) {\n  console.log(props);\n\n  const { chats, activeChat, userName, messages } = props;\n  const chat = chats && chats[activeChat];\n\n  function renderReadReceipts(message, isMyMessage) {\n    chat.people.map(\n      (person, index) =>\n        person.last_read === message.id && (\n          <div\n            key={\"read_${index}\"}\n            className=\"read-receipt\"\n            style={{\n              float: isMyMessage ? \"right\" : \"left\",\n              backgroundImage: \"url(${person?.person?.avatar})\"\n            }}\n          />\n        )\n    );\n  }\n\n  function renderMessages() {\n    const keys = Object.keys(messages);\n\n    return keys.map((key, index) => {\n      const message = messages[key];\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\n      const isMyMessage = userName === message.sender.username;\n\n      return (\n        <div key={`msg_${index}`} style={{ width: \"100%\" }}>\n          <div className=\"message-block\">\n            {isMyMessage ? (\n              <MyMessage message={message} />\n            ) : (\n              <TheirMessage\n                message={message}\n                lastMessage={messages[lastMessageKey]}\n              />\n            )}\n          </div>\n          <div\n            className=\"read-receipts\"\n            style={{\n              marginRight: isMyMessage ? \"18px\" : \"0px\",\n              marginLeft: isMyMessage ? \"0px\" : \"68px\"\n            }}\n          >\n            {renderReadReceipts(message, isMyMessage)}\n          </div>\n        </div>\n      );\n    });\n  }\n\n  if (!chat) return <div />;\n\n  return (\n    <div className=\"chat-feed\">\n      <div className=\"chat-title-container\">\n        <div className=\"chat-title\">{chat?.title}</div>\n        <div className=\"chat-subtitle\">\n          {chat.people.map((person) => ` ${person.person.username}`)}\n        </div>\n      </div>\n      {renderMessages()}\n      <div style={{ height: \"100px\" }} />\n      <div className=\"message-form-container\">\n        <MessageForm {...props} chatId={activeChat} />\n      </div>\n    </div>\n  );\n}\n\n//   function renderMessages() {\n//     const keys = Object.keys(messages);\n//     return keys.map((keys, index) => {\n//       const message = message[key];\n//       const lastMessageKey = index === 0 ? null : keys[index - 1];\n//       const isMyMessage = userName === message.sender.user0name;\n\n//       return (\n//         <div key={\"msg_${index}\"} style={{ width: \"100%\" }}>\n//           <div className=\"message-block\">\n//             {isMyMessage ? (\n//               <MyMessage message={message} />\n//             ) : (\n//               <TheirMessage\n//                 message={message}\n//                 lastMessage={messages[lastMessageKey]}\n//               />\n//             )}\n//           </div>\n//           <div\n//             className=\"read-receipts\"\n//             style={{\n//               marginRight: isMyMessage ? \"18px\" : \"0px\",\n//               marginLeft: isMyMessage ? \"0px\" : \"68px\"\n//             }}\n//           ></div>\n//           read receipts\n//         </div>\n//       );\n//     });\n//   }\n\n//   renderMessages();\n\n//   if (!chat) return \"Loading ...\";\n\n//   return (\n//     <div className=\"chat-feed\">\n//       <div className=\"chat-title-container\">\n//         <div className=\"chat-title\">{chat?.title}</div>\n//         <div className=\"chat-subtitle\">\n//           {chat.people.map((person) => \"${person.person.username}\")}\n//         </div>\n//       </div>\n//       {renderMessages()}\n//       <div style={{ height: \"100px\" }} />\n//       <div className=\"message-form-container\" />\n//       <MessageForm {...props} chatId={activeChat} />\n//     </div>\n//   );\n// }\n\nexport default ChatFeed;\n"]},"metadata":{},"sourceType":"module"}